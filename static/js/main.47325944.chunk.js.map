{"version":3,"sources":["actions/index.js","container/AddTodo.js","components/Todo.js","components/TodoList.js","reducers/visibilityFilter.js","container/VisibleTodoList.js","components/Link.js","container/FilterLink.js","components/Footer.js","container/FooterTodoList.js","App.js","serviceWorker.js","reducers/todo.js","reducers/index.js","store.js","index.js"],"names":["VISIBILITY_FILTER","AddTodoWrapper","styled","div","_templateObject","Input","input","_templateObject2","connect","_ref","dispatch","_useState","useState","_useState2","Object","slicedToArray","_useState2$","todo","setTodo","react_default","a","createElement","onKeyPress","_ref2","text","key","trim","type","id","uuid","placeholder","autoFocus","value","onChange","_ref3","target","TodoText","label","Todo_templateObject","props","completed","TodoWrapper","Todo_templateObject2","TodoRemove","_templateObject3","Todo","onClick","onRemove","onUpdate","edit","setEdit","_useState3","_useState4","hidden","className","checked","readOnly","defaultValue","onBlur","TodoListWrapper","TodoList_templateObject","TodoList","todos","toggleTodo","removeTodo","updateTodo","map","components_Todo","assign","getVisibleTodos","filter","t","Error","visibilityFilter","state","arguments","length","undefined","action","ButtonLink","button","Link_templateObject","active","css","Link_templateObject2","Link","children","ownProps","FooterWrapper","Footer_templateObject","Footer","all","FilterLink","AppWrapper","App_templateObject","App","container_AddTodo","VisibleTodoList","FooterTodoList","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onSuccess","catch","error","concat","toConsumableArray","item","objectSpread","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.47325944.chunk.js","sourcesContent":["import uuid from \"uuid/v4\";\n\nexport const addTodo = text => {\n\treturn {\n\t\ttype: \"ADD_TODO\",\n\t\tid: uuid(),\n\t\ttext\n\t};\n};\n\nexport const removeTodo = id => ({\n\ttype: \"REMOVE_TODO\",\n\tid\n});\n\nexport const updateTodo = (id, text) => ({\n\ttype: \"UPDATE_TODO\",\n\tid,\n\ttext\n});\n\nexport const setVisibilityFilter = filter => ({\n\ttype: \"SET_VISIBILITY_FILTER\",\n\tfilter\n});\n\nexport const toggleTodo = id => ({\n\ttype: \"TOGGLE_TODO\",\n\tid\n});\n\nexport const VISIBILITY_FILTER = {\n\tSHOW_ALL: \"SHOW_ALL\",\n\tSHOW_COMPLETED: \"SHOW_COMPLETED\",\n\tSHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../actions\";\nimport styled from \"styled-components\";\n\nconst AddTodoWrapper = styled.div`\n\tposition: fixed;\n  top: 0;\n  z-index:2;\n  background-color: white;\n`;\n\nconst Input = styled.input`\n\tmargin: 0.5em 1em;\n\tpadding: 0.25em 1em;\n\tbox-sizing: border-box;\n\tborder: none;\n\tborder-bottom: 2px solid palevioletred;\n\toutline: none;\n  font-size: 20px;\n  text-align: center;\n`;\n\nconst AddTodo = ({ dispatch }) => {\n\tconst [todo = \"\", setTodo] = useState();\n\n\treturn (\n\t\t<AddTodoWrapper>\n\t\t\t<Input\n\t\t\t\tonKeyPress={({ key }) => {\n\t\t\t\t\tif (!todo.trim()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (key === \"Enter\") {\n\t\t\t\t\t\tsetTodo(\"\");\n\t\t\t\t\t\tdispatch(addTodo(todo));\n\t\t\t\t\t}\n        }}\n        placeholder=\"Add Todo\"\n\t\t\t\tautoFocus\n\t\t\t\tvalue={todo}\n\t\t\t\tonChange={({ target: { value } }) => setTodo(value)}\n\t\t\t/>\n\t\t</AddTodoWrapper>\n\t);\n};\n\nexport default connect()(AddTodo);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoText = styled.label`\n\ttext-decoration: ${props => (props.completed ? \"line-through\" : \"none\")};\n`;\n\nconst TodoWrapper = styled.div`\n\tmargin: 5px 10px 5px;\n\tdisplay: flex;\n\tborder: 2px solid palevioletred;\n\twidth: 15em;\n\tpadding: 1em 1em;\n\tjustify-content: space-between;\n`;\n\nconst TodoRemove = styled.div`\n\tcursor: pointer;\n\tcolor: palevioletred;\n`;\n\nconst Todo = ({ onClick, completed, text, onRemove, onUpdate, id }) => {\n\tconst [edit = false, setEdit] = useState();\n\tconst [editText, seteditText] = useState();\n\treturn (\n\t\t<TodoWrapper>\n\t\t\t<div hidden={edit}>\n\t\t\t\t<div className=\"pretty p-icon p-round p-jelly\" onClick={onClick}>\n\t\t\t\t\t<input type=\"checkbox\" checked={completed} readOnly />\n\t\t\t\t\t<div className=\"state p-primary\">\n\t\t\t\t\t\t<i className=\"icon mdi mdi-check\" />\n\t\t\t\t\t\t<TodoText completed={completed}>{text}</TodoText>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{edit && (\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder={text}\n\t\t\t\t\tdefaultValue={text}\n\t\t\t\t\tonChange={({ target: { value } }) => onUpdate(id, value)}\n\t\t\t\t\tonBlur={() => setEdit(!edit)}\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<TodoRemove>\n\t\t\t\t<i className=\"icon mdi mdi-pencil\" onClick={() => setEdit(!edit)} />\n\t\t\t\t<i className=\"icon mdi mdi-delete\" onClick={onRemove} />\n\t\t\t</TodoRemove>\n\t\t</TodoWrapper>\n\t);\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport styled from \"styled-components\";\n\nconst TodoListWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst TodoList = ({ todos, toggleTodo, removeTodo, updateTodo }) => (\n\t<TodoListWrapper>\n\t\t{todos.map(todo => (\n\t\t\t<Todo\n\t\t\t\tkey={todo.id}\n\t\t\t\t{...todo}\n\t\t\t\tonClick={() => toggleTodo(todo.id)}\n        onRemove={() => removeTodo(todo.id)}\n        onUpdate={updateTodo}\n\t\t\t/>\n\t\t))}\n\t</TodoListWrapper>\n);\n\nexport default TodoList;\n","import { VISIBILITY_FILTER } from '../actions'\n\nconst visibilityFilter = (state = VISIBILITY_FILTER.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport const getVisibleTodos = (todos, filter) => {\n\tswitch (filter) {\n\t\tcase VISIBILITY_FILTER.SHOW_ALL:\n\t\t\treturn todos;\n\t\tcase VISIBILITY_FILTER.SHOW_COMPLETED:\n\t\t\treturn todos.filter(t => t.completed);\n\t\tcase VISIBILITY_FILTER.SHOW_ACTIVE:\n\t\t\treturn todos.filter(t => !t.completed);\n\t\tdefault:\n\t\t\tthrow new Error(\"Unknown filter: \" + filter);\n\t}\n};\n\nexport default visibilityFilter\n","import { connect } from \"react-redux\";\nimport TodoList from \"../components/TodoList\";\nimport { toggleTodo, removeTodo, updateTodo } from \"../actions\";\nimport { getVisibleTodos } from \"../reducers/visibilityFilter\";\n\nconst mapStateToProps = state => ({\n\ttodos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n\ttoggleTodo: id => dispatch(toggleTodo(id)),\n\tremoveTodo: id => dispatch(removeTodo(id)),\n\tupdateTodo: (id, text) => dispatch(updateTodo(id, text))\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(TodoList);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst ButtonLink = styled.button`\n\tbackground: transparent;\n\tborder-radius: 3px;\n\tborder: 2px solid palevioletred;\n\tcolor: palevioletred;\n\tmargin: 0.5em 1em;\n  padding: 0.25em 1em;\n  outline: none;\n\n\t${props =>\n\t\tprops.active &&\n\t\tcss`\n\t\t\tbackground: palevioletred;\n\t\t\tcolor: white;\n\t\t`}\n`;\n\nconst Link = ({ active, children, onClick }) => (\n\t<ButtonLink onClick={onClick} active={active}>\n\t\t{children}\n\t</ButtonLink>\n);\n\nexport default Link;\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from \"react\";\nimport { VISIBILITY_FILTER } from \"../actions\";\nimport FilterLink from \"../container/FilterLink\";\nimport styled from \"styled-components\";\nconst FooterWrapper = styled.div`\n\tposition: fixed;\n\tbottom: 0;\n  background-color: white;\n  width: 100vw;\n  @media  (max-width: 992px): {\n    width: 30vw;\n  }\n  @media (min-width: 1200px) {\n    width: 30vw;\n  }\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Footer = ({ active, completed, all }) => (\n\t<FooterWrapper>\n\t\t<FilterLink filter={VISIBILITY_FILTER.SHOW_ALL}>\n\t\t\tAll - {all.length}\n\t\t</FilterLink>\n\t\t<FilterLink filter={VISIBILITY_FILTER.SHOW_ACTIVE}>\n\t\t\tActive {active.length}\n\t\t</FilterLink>\n\t\t<FilterLink filter={VISIBILITY_FILTER.SHOW_COMPLETED}>\n\t\t\tCompleted {completed.length}\n\t\t</FilterLink>\n\t</FooterWrapper>\n);\n\nexport default Footer;\n","import { connect } from \"react-redux\";\nimport { VISIBILITY_FILTER } from \"../actions\";\nimport { getVisibleTodos } from \"../reducers/visibilityFilter\";\nimport Footer from \"../components/Footer\";\n\nconst mapStateToProps = state => ({\n\tactive: getVisibleTodos(state.todos, VISIBILITY_FILTER.SHOW_ACTIVE),\n\tcompleted: getVisibleTodos(state.todos, VISIBILITY_FILTER.SHOW_COMPLETED),\n\tall: getVisibleTodos(state.todos, VISIBILITY_FILTER.SHOW_ALL)\n});\n\nexport default connect(\n\tmapStateToProps,\n\tnull\n)(Footer);\n","import React, { Component } from \"react\";\nimport AddTodo from \"./container/AddTodo\";\nimport VisibleTodoList from \"./container/VisibleTodoList\";\nimport styled from \"styled-components\";\nimport FooterTodoList from \"./container/FooterTodoList\";\n\nconst AppWrapper = styled.div`\n  display: flex;\n  margin: 4em auto 4em;\n  flex-direction: column;\n  align-items: center;\n`;\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<AppWrapper>\n\t\t\t\t<AddTodo />\n\t\t\t\t<VisibleTodoList />\n\t\t\t\t<FooterTodoList />\n\t\t\t</AppWrapper>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const todos = (state = [], { type, id, text }) => {\n\tswitch (type) {\n\t\tcase \"ADD_TODO\":\n\t\t\treturn [...state, { id, text, completed: false }];\n\t\tcase \"REMOVE_TODO\":\n\t\t\treturn state.filter(item => item.id !== id);\n\t\tcase \"UPDATE_TODO\":\n\t\t\treturn state.map(todo => (todo.id === id ? { ...todo, text } : todo));\n\t\tcase \"TOGGLE_TODO\":\n\t\t\treturn state.map(todo =>\n\t\t\t\ttodo.id === id ? { ...todo, completed: !todo.completed } : todo\n\t\t\t);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default todos;\n","import { combineReducers } from \"redux\";\nimport todos from \"./todo\";\nimport visibilityFilter from \"./visibilityFilter\";\n\nconst rootReducer = combineReducers({\n\ttodos,\n\tvisibilityFilter\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store, persistor } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport \"pretty-checkbox/dist/pretty-checkbox.min.css\";\nimport \"@mdi/font/css/materialdesignicons.min.css\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<App />\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}